/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package soalNo2;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class salesOrderInput extends javax.swing.JFrame {

    public Statement st;
    public ResultSet rs;
    Connection conn = Conn.Connect();

    /**
     * Creates new form salesOrderInput
     */
    public salesOrderInput() {
        initComponents();
        initOrderItemsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        labelTitle = new javax.swing.JLabel();
        labelCustomerName = new javax.swing.JLabel();
        textCustomerName = new javax.swing.JTextField();
        labelEmployeeName = new javax.swing.JLabel();
        labelProductName = new javax.swing.JLabel();
        labelQty = new javax.swing.JLabel();
        labelPrice = new javax.swing.JLabel();
        textProductName = new javax.swing.JTextField();
        textPrice = new javax.swing.JTextField();
        labelTableOrderItems = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableOrderItems = new javax.swing.JTable();
        buttonAddItem = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        textQty = new javax.swing.JTextField();
        textEmployeeName = new javax.swing.JTextField();
        buttonDeleteItem = new javax.swing.JButton();
        labelTotalTrxTitle = new javax.swing.JLabel();
        labelTotalTrxValue = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTitle.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        labelTitle.setText("Order Penjualan");

        labelCustomerName.setText("Customer Name");

        labelEmployeeName.setText("Employee Name");

        labelProductName.setText("Product Name");

        labelQty.setText("Qty");

        labelPrice.setText("Price");

        textPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textPriceKeyTyped(evt);
            }
        });

        labelTableOrderItems.setText("Order Items");

        jScrollPane3.setViewportView(tableOrderItems);

        buttonAddItem.setText("Add Item");
        buttonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddItemActionPerformed(evt);
            }
        });

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        textQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textQtyKeyTyped(evt);
            }
        });

        buttonDeleteItem.setText("Delete Item");
        buttonDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteItemActionPerformed(evt);
            }
        });

        labelTotalTrxTitle.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        labelTotalTrxTitle.setText("Total Transaksi :");

        labelTotalTrxValue.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(labelTitle))
                            .addComponent(labelCustomerName, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(121, 121, 121))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelProductName)
                                    .addComponent(textProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelQty)
                                    .addComponent(textQty, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(labelPrice))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonAddItem))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(215, 215, 215)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelEmployeeName)
                                    .addComponent(textEmployeeName))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelTotalTrxTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelTotalTrxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(textCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(202, 202, 202))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelTableOrderItems)
                                    .addGap(330, 330, 330))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDeleteItem)
                .addGap(153, 153, 153)
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(labelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCustomerName)
                    .addComponent(labelEmployeeName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProductName)
                    .addComponent(labelQty)
                    .addComponent(labelPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTableOrderItems)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTotalTrxTitle)
                    .addComponent(labelTotalTrxValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonBack)
                    .addComponent(buttonDeleteItem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddItemActionPerformed
        // TODO add your handling code here:
        String customerName = textCustomerName.getText().trim();
        String employeeName = textEmployeeName.getText().trim();
        String productName = textProductName.getText().trim();
        String qty = textQty.getText().trim();
        String price = textPrice.getText().trim();

        // Validasi semua field harus diisi
        if (customerName.isEmpty() || employeeName.isEmpty() || productName.isEmpty() || qty.isEmpty() || price.isEmpty()) {
            JOptionPane.showMessageDialog(salesOrderInput.this, "Semua field harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel table = (DefaultTableModel) tableOrderItems.getModel();
        String[] rowData = {productName, qty, price};
        table.addRow(rowData);

        sumTotal();
    }//GEN-LAST:event_buttonAddItemActionPerformed

    private void buttonDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteItemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) tableOrderItems.getModel();
        int selectedRow = tableOrderItems.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(salesOrderInput.this, "Pilih data yang ingin dihapus dari tabel", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Hapus data dari tabel
        table.removeRow(selectedRow);

        sumTotal();
    }//GEN-LAST:event_buttonDeleteItemActionPerformed

    private void textQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textQtyKeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
    }//GEN-LAST:event_textQtyKeyTyped

    private void textPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPriceKeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
    }//GEN-LAST:event_textPriceKeyTyped

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        salesOrder list = new salesOrder();
        list.show();
        dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
        try {
            st = conn.createStatement();
            String customerName = textCustomerName.getText().trim();
            String employeeName = textEmployeeName.getText().trim();
            String productName = textProductName.getText().trim();
            String qty = textQty.getText().trim();
            String price = textPrice.getText().trim();

            // Validasi semua field harus diisi
            if (customerName.isEmpty() || employeeName.isEmpty() || productName.isEmpty() || qty.isEmpty() || price.isEmpty()) {
                JOptionPane.showMessageDialog(salesOrderInput.this, "Semua field harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the current date and time
            LocalDateTime currentDateTime = LocalDateTime.now();

            // Format the date and time using a specific pattern (optional)
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String formattedDateTime = currentDateTime.format(formatter);

            st.executeUpdate("INSERT INTO `order` (customer_name, employee_name, transaction_at) VALUES('"
                    + customerName + "','"
                    + employeeName + "','"
                    + formattedDateTime + "')", Statement.RETURN_GENERATED_KEYS);

            ResultSet generatedKeys = st.getGeneratedKeys();

            int order_id = -1;

            if (generatedKeys.next()) {
                order_id = generatedKeys.getInt(1);
            } else {
                throw new SQLException("Failed to retrieve order id.");
            }

            DefaultTableModel table = (DefaultTableModel) tableOrderItems.getModel();

            for (int i = 0; i < table.getRowCount(); i++) {
                productName = table.getValueAt(i, 0).toString();
                qty = table.getValueAt(i, 1).toString();
                price = table.getValueAt(i, 2).toString();

                st.executeUpdate("INSERT INTO `order_item` (order_id, product_name, qty, price) VALUES('"
                        + order_id + "','"
                        + productName + "','"
                        + qty + "','"
                        + price + "')");
            }

            JOptionPane.showMessageDialog(salesOrderInput.this, "Data Order Sukses Tersimpan! Kembali ke Halaman List Order...", "Success", JOptionPane.INFORMATION_MESSAGE);

            salesOrder list = new salesOrder();
            list.show();
            dispose();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void initOrderItemsTable() {
        DefaultTableModel table = (DefaultTableModel) tableOrderItems.getModel();
        table.setRowCount(0);

        table.addColumn("Product Name");
        table.addColumn("Qty");
        table.addColumn("Price");
    }

    private void sumTotal() {
        // Calculate the sum of qty and price
        int totalQty, totalPrice;
        int total = 0;

        DefaultTableModel table = (DefaultTableModel) tableOrderItems.getModel();

        for (int i = 0; i < table.getRowCount(); i++) {
            totalQty = Integer.parseInt(table.getValueAt(i, 1).toString());
            totalPrice = Integer.parseInt(table.getValueAt(i, 2).toString());

            total += totalQty * totalPrice;
        }

        labelTotalTrxValue.setText(String.valueOf(total));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(salesOrderInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(salesOrderInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(salesOrderInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(salesOrderInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new salesOrderInput().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddItem;
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonDeleteItem;
    private javax.swing.JButton buttonSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel labelCustomerName;
    private javax.swing.JLabel labelEmployeeName;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JLabel labelProductName;
    private javax.swing.JLabel labelQty;
    private javax.swing.JLabel labelTableOrderItems;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelTotalTrxTitle;
    private javax.swing.JLabel labelTotalTrxValue;
    private javax.swing.JTable tableOrderItems;
    private javax.swing.JTextField textCustomerName;
    private javax.swing.JTextField textEmployeeName;
    private javax.swing.JTextField textPrice;
    private javax.swing.JTextField textProductName;
    private javax.swing.JTextField textQty;
    // End of variables declaration//GEN-END:variables
}
